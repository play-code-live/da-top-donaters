{{ define "contentPage" }}
    <div class="container mt-3">
        {{ if .IsAuthorized }}
            <form method="POST">
                <div class="mb-3">
                    <label for="panel_title" class="form-label">Заголовок панели</label>
                    <input type="text" class="form-control" id="panel_title" name="panel_title" aria-describedby="panelTitleHelp" value="{{ .Config.Title }}">
                    <div id="panelTitleHelp" class="form-text">Заголовок будет отображаться в самом верху панели</div>
                </div>
                <div class="mb-3">
                    <label for="donaters_count" class="form-label">Кол-во записей в рейтинге</label>
                    <input type="text" class="form-control" id="donaters_count" name="donaters_count" aria-describedby="donatersCountHelp" value="{{ .Config.DonatersCount }}">
                    <div id="donatersCountHelp" class="form-text">Как много участников рейтинга отображать</div>
                </div>
                <div class="mb-3">
                    <label for="top_count" class="form-label">Отделить первые строки</label>
                    <input type="text" class="form-control" id="top_count" name="top_count" aria-describedby="topCountHelp" value="{{ .Config.TopCount }}">
                    <div id="topCountHelp" class="form-text">Сделать отступ после N записей. Если 0 - не делать отступ</div>
                </div>
                <div class="mb-3">
                    <label for="names_to_ignore" class="form-label">Игнорируемые имена</label>
                    <input type="text" class="form-control" id="names_to_ignore" name="names_to_ignore" aria-describedby="namesToIgnoreHelp" value="{{ .NamesToIgnore }}">
                    <div id="namesToIgnoreHelp" class="form-text">Имена донатеров через запятую</div>
                </div>
                <label class="form-label">Приведение имен</label>
                <div id="name_map" class="mb-3">
                    <div id="name_map_example" class="row g-3 d-none mb-1">
                        <div class="col-3">
                            <input type="text" class="form-control" name="name_map[]" placeholder="Целевое имя">
                        </div>
                        <div class="col-8">
                            <input type="text" class="form-control" name="name_map[]" placeholder="Приводимые имена через запятую">
                        </div>
                        <div class="col-1">
                            <button type="button" class="btn btn-link remove_name_map_row" onclick="removeNameMapRow(event.target)">X</button>
                        </div>
                    </div>
                </div>
                <button type="button" id="add_name_map_row" class="btn btn-secondary mb-3">Добавить</button>
                <hr />
                <button type="submit" class="btn btn-primary">Сохранить</button>
            </form>

            <script>
                const addNameMapRowBtn = document.getElementById('add_name_map_row')
                const nameMapList = document.getElementById('name_map')
                function addNameMapRow() {
                    const ex = document.getElementById('name_map_example')
                    const row = ex.cloneNode(true)
                    row.classList.remove('d-none')
                    row.id = null
                    nameMapList.append(row)
                }
                addNameMapRowBtn.onclick = addNameMapRow
                if (nameMapList.childElementCount <= 1) {
                    addNameMapRow()
                }
                function removeNameMapRow(t) {
                    t.parentElement.parentNode.remove()
                }
            </script>
        {{ else }}
            <div class="text-center">
                <a href="/redirect/{{.ChannelId}}" target="_blank" class="btn btn-primary btn-lg">Авторизоваться в DA</a>
            </div>
            <script>
                window.Twitch.ext.onAuthorized((auth) => {
                    let socket = new WebSocket("{{.SocketHost}}/socket/" + auth.channelId)
                    socket.onopen = () => {
                        console.log("Connected to the managing socket")
                    }
                    socket.onmessage = () => {
                        window.location = "/config";
                    }
                });
            </script>
        {{ end }}
    </div>
{{ end }}